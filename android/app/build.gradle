apply plugin: 'com.android.application'
apply from: rootProject.getRootDir().getAbsolutePath() + "/flutter.gradle"
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.android.targetSdkVersion
    defaultConfig {
        applicationId rootProject.ext.version.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode appVersionCode(rootProject.ext.version.versionName.toString())
        versionName rootProject.ext.version.versionName.toString()
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
            generateStubs = true
        }
    }
    buildTypes {

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

//1.0.0 = 10000; 1.1.0 = 10100 分割"."，每项固定显示长度为2
def appVersionCode(String appVersionName) {
    String[] arrayString = appVersionName.split("\\.")
    if (arrayString.length != 3) {
        throw new GradleException("version length error")
    }
    StringBuilder stringBuilder = new StringBuilder()
    for (String s : arrayString) {
        if (s.length() == 1) {
            stringBuilder.append("0" + s)
        } else if (s.length() == 2) {
            stringBuilder.append(s)
        } else {
            throw new GradleException("version name error")
        }
    }
    return stringBuilder.toInteger()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation rootProject.ext.androidx["appcompat"]
    implementation rootProject.ext.androidx["constraintlayout"]

    implementation rootProject.ext.kotlin["stdlib"]
    implementation rootProject.ext.kotlin["coroutine"]
    implementation rootProject.ext.kotlin["coroutine-android"]

    api project(':module_flutter')

    //aRouter
    implementation rootProject.ext.dependencies["arouter-api"]
    kapt rootProject.ext.dependencies["arouter-compiler"]
}

